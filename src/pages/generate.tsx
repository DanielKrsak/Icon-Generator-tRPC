import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import React, { useState } from "react";
import Button from "~/components/Button";
import FormGroup from "~/components/FormGroup";
import Input from "~/components/Input";
import { api } from "~/utils/api";

const colors = [
  "blue",
  "red",
  "pink",
  "green",
  "orange",
  "yellow",
  "white",
  "black",
];

const GeneratePage: NextPage = () => {
  const [form, setForm] = useState({
    prompt: "",
    color: "",
  });

  const [imageUrl, setImageUrl] = useState("");

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
      setForm((prev) => ({
        ...prev,
        prompt: "",
      }));
    },
  });

  const handleFormSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    generateIcon.mutate(form);
  };

  const updateForm = (key: string) => {
    return (e: React.ChangeEvent<HTMLInputElement>) => {
      setForm({
        ...form,
        [key]: e.target.value,
      });
    };
  };

  return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-24 flex min-h-screen flex-col gap-6 px-12">
        <h1 className="text-6xl">Generate Your Icons</h1>
        <p className="mb-12 text-2xl">
          Fill out the form below to start generating your icons
        </p>
        <form className="flex flex-col gap-6" onSubmit={handleFormSubmit}>
          <h2 className="text-xl">
            1. Describe what you want your icon to look like.
          </h2>
          <FormGroup className="mb-12">
            <label htmlFor="">Prompt</label>
            <Input value={form.prompt} onChange={updateForm("prompt")} />
          </FormGroup>
          <h2 className="text-xl">2. Pick your icon color</h2>
          <FormGroup className="mb-12 grid grid-cols-4">
            {colors.map((color) => {
              return (
                <label key={color} className="flex gap-2 text-lg lowercase">
                  <input
                    type="radio"
                    name="color"
                    value={color}
                    checked={color === form.color}
                    onChange={() =>
                      setForm((prev) => {
                        return { ...prev, color };
                      })
                    }
                  />
                  {color}
                </label>
              );
            })}
          </FormGroup>
          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
          >
            Submit
          </Button>
        </form>
        {imageUrl && (
          <>
            <h2 className="text-1xl">Your Icons</h2>
            <section className="mb-12 grid grid-cols-4 gap-4">
              <Image
                // src={`data:image/png;base64,${imageUrl}`}
                src={imageUrl}
                alt="api-image"
                height="100"
                width="100"
                className="w-full"
              />
            </section>
          </>
        )}
      </main>
    </>
  );
};

export default GeneratePage;
